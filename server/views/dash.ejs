<link rel="stylesheet" href="/css/bs.css">
<title>WR Notes</title>
<link rel="stylesheet" href="/css/dash.css">
<link rel="stylesheet" href="/css/animate.css">
<link rel="stylesheet"
      href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="/css/jquery.js"></script>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<style>

</style>

<nav class="navbar navbar-dark " style="height:40px;display: flex;">

    <a style="background: #1e1e3f;border-radius: 19px;padding: 10px;" class="navbar-brand" href="#">
        WR Notes
    </a>
    <div class="navbar-right">
        <div id="progress" class="btn badge rounded bg-dark"><img id="image" src="/assets/tick.png"
                                                                  style="width: 25px;height: 25px;"/>
        </div>
        <div class="btn btn-dark" onclick="window.location='/dash/logout'">Logout</div>
    </div>
</nav>
<div id="edit_box" class="col-md-3 card form-group circle"
     style="padding: 10px;margin-left:40%;margin-top:10px;">
    <input title="description" id="title" class="form-control"
           placeholder="Add a note"
           type="text"
           readonly
           what="add"
           onclick="parseData(this)"
           autocomplete="off"
           style="width: 100%;border:none;"/>

</div>
<hr>
<div id="notes" class="row" style="margin-left: 60px;">
    <% for (var i = 0; i < data.length ; i++) {
        var note = data[i]; %>
    <div class="col-md-3 card circle" style="margin-left: 15px;margin-top: 4px;">
        <input title="description_<%= i %>"
               id="title_<%= i %>"
               class="form-control"
               value="<%= note.title %>"
               what="title"
               readonly
               onclick="parseData(this)"
               type="text" style="width: 100%;border:none;"/>
        <hr>
        <% var isPass = note.title.toLowerCase().includes("password") || note.title.toLowerCase().includes("secret") %>
        <textarea
                readonly
                title="title_<%= i %>"
                data="<%= note._id %>"
                onclick="parseData(this)"
                what="desc"
                id="description_<%= i %>"
                class="form-control"
                style="resize:none;<%= isPass ? "display: none;" : "" %> width: 100%;border:none;height: 80px;"><%= note.desc %></textarea>
    </div>
    <% } %>
</div>

<div id="note" class="col-md-3 card circle"
     style="display:none;margin-left: 15px;padding: 10px;margin-top: 4px;">
    <input title="description_"
           id="title_"
           onclick="parseData(this)"
           readonly
           class="form-control"
           what="title"
           type="text"
           style="width: 100%;border:none;"/>
    <hr>
    <textarea
            what="desc"
            readonly
            onclick="parseData(this)"
            title="title_"
            id="description_"
            class="form-control"
            style="resize:none;width: 100%;border:none;display: inline;"></textarea>
</div>


<div class="modal fade" id="modal_note" tabindex="-1" role="dialog"
     aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div style="background-color: #1e1e3f;" class="modal-content">
            <div id="note" class="col-md-12 card circle" style="">
                <div id="options" style="margin-left:auto; margin-right:0;">
                    <i onclick="deleteNote()" style="color:white !important;"
                       class="fa fa-trash"></i>
                    <i style="color:white !important;" class="fa fa-share"></i>

                </div>
                <hr>
                <input placeholder="Enter Title..." title="add_desc" id="add_title"
                       class="form-control" type="text" style="width: 100%;border:none;"/>
                <div id="desc_box">
                    <hr>
                    <textarea placeholder="Enter Description..." title="add_title" id="add_desc"
                              class="form-control"
                              onkeyup="adjustHeight(this)"
                              style="width: 100%;border:none;display: inline;"></textarea>
                </div>
            </div>

        </div>
    </div>
</div>
<% include footer.ejs %>
<script>
    let title, desc, id, isAdding = false, ltext, ldesc, _title, _desc;


    function addData(id) {
        const box = document.getElementById("notes");
        const x = document.getElementById("note");
        const x1 = x.cloneNode(true);
        x1.children[0].value = ltext;
        x1.children[0].setAttribute("id", "title_" + id);
        x1.children[1].setAttribute("title", "title_" + id);
        x1.children[1].setAttribute("id", "desc_" + id);
        x1.children[0].setAttribute("title", "desc_" + id);
        x1.setAttribute("id", "div_" + id);
        x1.children[1].value = ldesc;
        x1.children[1].setAttribute("data", id)
        x1.style.display = "block"
        box.insertBefore(x1, box.childNodes[0]);
        x1.classList.add("animated", "rotateInUpRight")
    }


    deleteNote = () => {
        $("#add_title")[0].value = "DEL"
        ltext = "DEL";
        $('#modal_note').modal('hide')

    }
    $('#modal_note').on('show.bs.modal hide.bs.modal', function (e) {
        if (e.type === "show") {
            $("#add_title")[0].value = title
            $("#add_desc")[0].value = desc
        } else {
            ltext = $("#add_title")[0].value.trim()
            ldesc = $("#add_desc")[0].value.trim()
            if (ltext !== "") {
                if (ltext === title.trim() && ldesc === desc) {
                } else {
                    document.getElementById("image").src = "/assets/progress.gif";
                    taskPending = true;
                    $.post("/dash/notes/add", {
                            title: ltext,
                            desc: ldesc,
                            key: id
                        },
                        function (data) {
                            taskPending = false;
                            if (data.success) {
                                document.getElementById("image").src = "/assets/tick.png";
                                if (ltext === "DEL" || ltext === "DELETE") {
                                    _title.parentNode.setAttribute("id", "axaxax123")
                                    animateCSS("#axaxax123", "rollOut", () => {
                                        document.getElementById("notes")
                                            .removeChild(_title.parentNode);
                                    })
                                    alertify.error("Note Deleted !");
                                } else if (id.trim() === "") {
                                    alertify.success("Note added successfully !")
                                    addData(data.id)
                                } else {
                                    _title.value = ltext
                                    _desc.value = ldesc
                                    alertify.success("Note updated successfully !")
                                    if (ltext.toLowerCase().includes("password") || ltext.toLowerCase().includes("secret"))
                                        _desc.style.display = "none";
                                    else _desc.style.display = "inline";
                                    _title.parentNode.classList.add("animated", "zoomInDown")
                                    _title.parentNode.addEventListener('animationend', () => {
                                        _title.parentNode.classList.remove("animated", "zoomInDown")
                                    })
                                }
                            } else {
                                alertify.error("Something went wrong !")
                                document.getElementById("image").src = "/assets/cross.png";

                            }

                        })

                }
            } else {
                alertify.error("Title cannot be empty !")


            }

        }

    })

    parseData = (e) => {
        document.getElementById("options").style.display = "inline";

        if (e.getAttribute("what") === "add") {
            document.getElementById("options").style.display = "none";
            title = "";
            desc = "";
            id = "";
        } else if (e.getAttribute("what") === "title") {
            title = e.value;
            _title = e
            _desc = document.getElementById(e.getAttribute("title"))
            desc = _desc.value;
            id = document.getElementById(e.getAttribute("title")).getAttribute("data")

        } else if (e.getAttribute("what") === "desc") {
            _desc = e
            _title = document.getElementById(e.getAttribute("title"))
            desc = e.value;
            title = _title.value;
            id = e.getAttribute("data")
        }
        $('#modal_note').modal(show = true)
    }
    adjustHeight = (e) => {
        e.style.height = ""; /* Reset the height*/
        e.style.height = Math.min(e.scrollHeight, 400) + "px";
    }

</script>


